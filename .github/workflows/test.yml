name: Compile and Release Qt6 Project

on: 
  push:
    branches: [ "master" ]

env:
  QT_VERSION:  "6.2.0"
  MINGW_ARCH:  "win64_mingw81"
  MINGW_PATH:  "mingw81_64"
  BUILD_TYPE:   Release

jobs:
  build-programm:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        arch: ${{ env.MINGW_ARCH }}
        host: 'windows'
        target: 'desktop'
        dir: "${{github.workspace}}/qt"
        install-deps: "true"
    
    # - name: Check tools version
    #   run: |
    #     Write-Output (Get-Command g++.exe).Path
    #     g++.exe --version
    #     Write-Output (Get-Command cmake.exe).Path
    #     cmake.exe -version
    #     Write-Output (Get-Command mingw32-make.exe).Path
    #     mingw32-make.exe -version  

    # - name: Check availability of libraries
    #   run: |
    #    ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/lib

    # - name: Check availability of binares
    #   run: |
    #    ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/lib/
    
    - name: Configure CMake Project
      working-directory: ${{github.workspace}}
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "MinGW Makefiles" -B ${{github.workspace}}/build
    - name: Build project
      working-directory: ${{github.workspace}}/build
      run: |
        mingw32-make.exe
    - name: Compress portable program
      run: |
        mkdir ${{github.workspace}}\build\all\
        cp ${{github.workspace}}/build/Qt-GitHub-Actions.exe ${{github.workspace}}\build\all\
        cd ${{github.workspace}}\build\all\
        windeployqt.exe Qt-GitHub-Actions.exe --release
        ls
        Compress-Archive -Path ${{github.workspace}}\build\all\ -DestinationPath ${{github.workspace}}\build\final.zip

    # - uses: actions/upload-artifact@v3
    #   with:
    #     name: Qt-GitHub-Actions
    #     path: ${{github.workspace}}\build\final.zip
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name:  Release ${{ github.run_number }}
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{github.workspace}}\build\final.zip
        asset_name: Qt-GitHub-Actions_${{ github.run_number }}
        asset_content_type: application/zip